(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[157],{

/***/ "./blog/tip238.md":
/*!************************!*\
  !*** ./blog/tip238.md ***!
  \************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _tip238_md_vue_type_template_id_47bc4d45___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./tip238.md?vue&type=template&id=47bc4d45& */ "./blog/tip238.md?vue&type=template&id=47bc4d45&");
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");

var script = {}


/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_1__["default"])(
  script,
  _tip238_md_vue_type_template_id_47bc4d45___WEBPACK_IMPORTED_MODULE_0__["render"],
  _tip238_md_vue_type_template_id_47bc4d45___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"],
  false,
  null,
  null,
  null
  
)

/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "./blog/tip238.md?vue&type=template&id=47bc4d45&":
/*!*******************************************************!*\
  !*** ./blog/tip238.md?vue&type=template&id=47bc4d45& ***!
  \*******************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_cache_loader_dist_cjs_js_cacheDirectory_node_modules_vuepress_core_node_modules_cache_vuepress_cacheIdentifier_671ceca3_vue_loader_template_node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_cache_loader_dist_cjs_js_ref_1_0_node_modules_vue_loader_lib_index_js_ref_1_1_node_modules_vuepress_markdown_loader_index_js_ref_1_2_tip238_md_vue_type_template_id_47bc4d45___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/@vuepress/core/node_modules/.cache/vuepress","cacheIdentifier":"671ceca3-vue-loader-template"}!../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../node_modules/cache-loader/dist/cjs.js??ref--1-0!../node_modules/vue-loader/lib??ref--1-1!../node_modules/@vuepress/markdown-loader??ref--1-2!./tip238.md?vue&type=template&id=47bc4d45& */ "./node_modules/cache-loader/dist/cjs.js?{\"cacheDirectory\":\"node_modules/@vuepress/core/node_modules/.cache/vuepress\",\"cacheIdentifier\":\"671ceca3-vue-loader-template\"}!./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/cache-loader/dist/cjs.js?!./node_modules/vue-loader/lib/index.js?!./node_modules/@vuepress/markdown-loader/index.js?!./blog/tip238.md?vue&type=template&id=47bc4d45&");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _node_modules_cache_loader_dist_cjs_js_cacheDirectory_node_modules_vuepress_core_node_modules_cache_vuepress_cacheIdentifier_671ceca3_vue_loader_template_node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_cache_loader_dist_cjs_js_ref_1_0_node_modules_vue_loader_lib_index_js_ref_1_1_node_modules_vuepress_markdown_loader_index_js_ref_1_2_tip238_md_vue_type_template_id_47bc4d45___WEBPACK_IMPORTED_MODULE_0__["render"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return _node_modules_cache_loader_dist_cjs_js_cacheDirectory_node_modules_vuepress_core_node_modules_cache_vuepress_cacheIdentifier_671ceca3_vue_loader_template_node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_cache_loader_dist_cjs_js_ref_1_0_node_modules_vue_loader_lib_index_js_ref_1_1_node_modules_vuepress_markdown_loader_index_js_ref_1_2_tip238_md_vue_type_template_id_47bc4d45___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"]; });



/***/ }),

/***/ "./node_modules/cache-loader/dist/cjs.js?{\"cacheDirectory\":\"node_modules/@vuepress/core/node_modules/.cache/vuepress\",\"cacheIdentifier\":\"671ceca3-vue-loader-template\"}!./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/cache-loader/dist/cjs.js?!./node_modules/vue-loader/lib/index.js?!./node_modules/@vuepress/markdown-loader/index.js?!./blog/tip238.md?vue&type=template&id=47bc4d45&":
/*!*******************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/@vuepress/core/node_modules/.cache/vuepress","cacheIdentifier":"671ceca3-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--1-0!./node_modules/vue-loader/lib??ref--1-1!./node_modules/@vuepress/markdown-loader??ref--1-2!./blog/tip238.md?vue&type=template&id=47bc4d45& ***!
  \*******************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ContentSlotsDistributor',{attrs:{"slot-key":_vm.$parent.slotKey}},[_c('div',{staticClass:"custom-block tip"},[_c('p',{staticClass:"custom-block-title"},[_vm._v("TIP")]),_vm._v(" "),_c('p',[_vm._v("ðŸ”¥ Make sure you "),_c('a',{attrs:{"href":"http://azuredev.tips?WT.mc_id=azure-azuredevtips-azureappsdev","target":"_blank","rel":"noopener noreferrer"}},[_vm._v("star the repo"),_c('OutboundLink')],1),_vm._v(" to keep up to date with new tips and tricks.")]),_vm._v(" "),_c('p',[_vm._v("ðŸ’¡ Learn more : "),_c('a',{attrs:{"href":"https://docs.microsoft.com/en-us/azure/aks/configure-azure-cni?WT.mc_id=docs-azuredevtips-azureappsdev","target":"_blank","rel":"noopener noreferrer"}},[_vm._v("Configure Azure CNI networking in Azure Kubernetes Service (AKS)"),_c('OutboundLink')],1),_vm._v(".")]),_vm._v(" "),_c('p',[_vm._v("ðŸ“º Watch the video : "),_c('a',{attrs:{"href":"https://www.youtube.com/watch?v=knnn2fPEL0M&list=PLLasX02E8BPCNCK8Thcxu-Y-XcBUbhFWC&index=3&t=0s?WT.mc_id=youtube-azuredevtips-azureappsdev","target":"_blank","rel":"noopener noreferrer"}},[_vm._v("Secure traffic between pods using network policies in Azure Kubernetes Service (AKS)"),_c('OutboundLink')],1)])]),_vm._v(" "),_c('h3',{attrs:{"id":"secure-traffic-between-pods-using-network-policies-in-azure-kubernetes-service-aks"}},[_c('a',{staticClass:"header-anchor",attrs:{"href":"#secure-traffic-between-pods-using-network-policies-in-azure-kubernetes-service-aks"}},[_vm._v("#")]),_vm._v(" Secure traffic between pods using network policies in Azure Kubernetes Service (AKS)")]),_vm._v(" "),_c('h4',{attrs:{"id":"securing-components-in-your-azure-kubernetes-service-aks"}},[_c('a',{staticClass:"header-anchor",attrs:{"href":"#securing-components-in-your-azure-kubernetes-service-aks"}},[_vm._v("#")]),_vm._v(" Securing components in your Azure Kubernetes Service (AKS)")]),_vm._v(" "),_c('p',[_vm._v("By default, components in a Kubernetes cluster can receive traffic from anywhere. This is fine for a development scenario, but not when you run your services in production. To secure your "),_c('a',{attrs:{"href":"https://azure.microsoft.com/services/kubernetes-service/?WT.mc_id=azure-azuredevtips-azureappsdev","target":"_blank","rel":"noopener noreferrer"}},[_vm._v("Azure Kubernetes Service (AKS)"),_c('OutboundLink')],1),_vm._v(" cluster, you can implement a network policy that defines which components can receive traffic from which sources.")]),_vm._v(" "),_c('p',[_vm._v("In this post, we'll secure traffic between Kubernetes pods using a network policy.")]),_vm._v(" "),_c('h4',{attrs:{"id":"prerequisites"}},[_c('a',{staticClass:"header-anchor",attrs:{"href":"#prerequisites"}},[_vm._v("#")]),_vm._v(" Prerequisites")]),_vm._v(" "),_c('p',[_vm._v("If you want to follow along, you'll need the following:")]),_vm._v(" "),_c('ul',[_c('li',[_vm._v("An Azure subscription (If you don't have an Azure subscription, create a "),_c('a',{attrs:{"href":"https://azure.microsoft.com/free/?WT.mc_id=azure-azuredevtips-azureappsdev","target":"_blank","rel":"noopener noreferrer"}},[_vm._v("free account"),_c('OutboundLink')],1),_vm._v(" before you begin)")])]),_vm._v(" "),_c('h4',{attrs:{"id":"secure-traffic-between-pods-using-network-policies"}},[_c('a',{staticClass:"header-anchor",attrs:{"href":"#secure-traffic-between-pods-using-network-policies"}},[_vm._v("#")]),_vm._v(" Secure traffic between pods using network policies")]),_vm._v(" "),_c('p',[_vm._v("To start securing your Kubernetes components, you need to implement a network policy.")]),_vm._v(" "),_c('p',[_vm._v("Azure provides two ways to implement a network policy. You choose a network policy option when you create an AKS cluster. The policy option can't be changed after the cluster is created. You can choose between:")]),_vm._v(" "),_c('ul',[_c('li',[_vm._v("Azureâ€™s own implementation, called "),_c('strong',[_vm._v("Azure Network Policies")])]),_vm._v(" "),_c('li',[_c('a',{attrs:{"href":"https://docs.projectcalico.org/v3.8/security/calico-network-policy","target":"_blank","rel":"noopener noreferrer"}},[_vm._v("Calico Network Policies"),_c('OutboundLink')],1),_vm._v(", an open-source network and network security solution")])]),_vm._v(" "),_c('p',[_vm._v("You can learn more about the differences between these options "),_c('a',{attrs:{"href":"https://docs.microsoft.com/azure/aks/use-network-policies#overview-of-network-policy?WT.mc_id=azure-azuredevtips-azureappsdev","target":"_blank","rel":"noopener noreferrer"}},[_vm._v("here"),_c('OutboundLink')],1),_vm._v(".")]),_vm._v(" "),_c('p',[_vm._v("So, to get started, we'll create a new AKS cluster with a network policy:")]),_vm._v(" "),_c('ol',[_c('li',[_vm._v("We are going to use the "),_c('a',{attrs:{"href":"https://azure.microsoft.com/features/cloud-shell/?WT.mc_id=azure-azuredevtips-azureappsdev","target":"_blank","rel":"noopener noreferrer"}},[_vm._v("Azure Cloud Shell"),_c('OutboundLink')],1),_vm._v(" to run our scripts. By using this, we make sure that we run the latest version of the Azure CLI. Go to "),_c('a',{attrs:{"href":"https://shell.azure.com/?WT.mc_id=azure-azuredevtips-azureappsdev","target":"_blank","rel":"noopener noreferrer"}},[_vm._v("https://shell.azure.com/"),_c('OutboundLink')],1)]),_vm._v(" "),_c('li',[_vm._v("Run the following script in the Azure Cloud Shell. This creates a virtual network and subnet, an Azure AD Service principal and creates an AKS cluster with "),_c('strong',[_vm._v("Azure Network Policy")]),_vm._v(" enabled\na. Replace the values for the "),_c('strong',[_vm._v("RESOURCE_GROUP_NAME")]),_vm._v(", "),_c('strong',[_vm._v("CLUSTER_NAME")]),_vm._v(" and "),_c('strong',[_vm._v("LOCATION")]),_vm._v(" parameters at the top with your own values")])]),_vm._v(" "),_c('div',{staticClass:"language- line-numbers-mode"},[_c('pre',{pre:true,attrs:{"class":"language-text"}},[_c('code',[_vm._v("RESOURCE_GROUP_NAME=akstips\nCLUSTER_NAME=tipsAndTricksAKSCluster\nLOCATION=eastus\n\n# Create a resource group\naz group create --name $RESOURCE_GROUP_NAME --location $LOCATION\n\n# Create a virtual network and subnet\naz network vnet create \\\n    --resource-group $RESOURCE_GROUP_NAME \\\n    --name myVnet \\\n    --address-prefixes 10.0.0.0/8 \\\n    --subnet-name myAKSSubnet \\\n    --subnet-prefix 10.240.0.0/16\n\n# Create a service principal and read in the application ID\nSP=$(az ad sp create-for-rbac --output json)\nSP_ID=$(echo $SP | jq -r .appId)\nSP_PASSWORD=$(echo $SP | jq -r .password)\n\n# Wait 15 seconds to make sure that service principal has propagated\necho \"Waiting for service principal to propagate...\"\nsleep 15\n\n# Get the virtual network resource ID\nVNET_ID=$(az network vnet show --resource-group $RESOURCE_GROUP_NAME --name myVnet --query id -o tsv)\n\n# Assign the service principal Contributor permissions to the virtual network resource\naz role assignment create --assignee $SP_ID --scope $VNET_ID --role Contributor\n\n# Get the virtual network subnet resource ID\nSUBNET_ID=$(az network vnet subnet show --resource-group $RESOURCE_GROUP_NAME --vnet-name myVnet --name myAKSSubnet --query id -o tsv)\n\n# Create the AKS cluster and specify the virtual network and service principal information\n# Enable network policy by using the `--network-policy` parameter\naz aks create \\\n    --resource-group $RESOURCE_GROUP_NAME \\\n    --name $CLUSTER_NAME \\\n    --node-count 1 \\\n    --generate-ssh-keys \\\n    --network-plugin azure \\\n    --service-cidr 10.0.0.0/16 \\\n    --dns-service-ip 10.0.0.10 \\\n    --docker-bridge-address 172.17.0.1/16 \\\n    --vnet-subnet-id $SUBNET_ID \\\n    --service-principal $SP_ID \\\n    --client-secret $SP_PASSWORD \\\n    --network-policy azure\n")])]),_vm._v(" "),_c('div',{staticClass:"line-numbers-wrapper"},[_c('span',{staticClass:"line-number"},[_vm._v("1")]),_c('br'),_c('span',{staticClass:"line-number"},[_vm._v("2")]),_c('br'),_c('span',{staticClass:"line-number"},[_vm._v("3")]),_c('br'),_c('span',{staticClass:"line-number"},[_vm._v("4")]),_c('br'),_c('span',{staticClass:"line-number"},[_vm._v("5")]),_c('br'),_c('span',{staticClass:"line-number"},[_vm._v("6")]),_c('br'),_c('span',{staticClass:"line-number"},[_vm._v("7")]),_c('br'),_c('span',{staticClass:"line-number"},[_vm._v("8")]),_c('br'),_c('span',{staticClass:"line-number"},[_vm._v("9")]),_c('br'),_c('span',{staticClass:"line-number"},[_vm._v("10")]),_c('br'),_c('span',{staticClass:"line-number"},[_vm._v("11")]),_c('br'),_c('span',{staticClass:"line-number"},[_vm._v("12")]),_c('br'),_c('span',{staticClass:"line-number"},[_vm._v("13")]),_c('br'),_c('span',{staticClass:"line-number"},[_vm._v("14")]),_c('br'),_c('span',{staticClass:"line-number"},[_vm._v("15")]),_c('br'),_c('span',{staticClass:"line-number"},[_vm._v("16")]),_c('br'),_c('span',{staticClass:"line-number"},[_vm._v("17")]),_c('br'),_c('span',{staticClass:"line-number"},[_vm._v("18")]),_c('br'),_c('span',{staticClass:"line-number"},[_vm._v("19")]),_c('br'),_c('span',{staticClass:"line-number"},[_vm._v("20")]),_c('br'),_c('span',{staticClass:"line-number"},[_vm._v("21")]),_c('br'),_c('span',{staticClass:"line-number"},[_vm._v("22")]),_c('br'),_c('span',{staticClass:"line-number"},[_vm._v("23")]),_c('br'),_c('span',{staticClass:"line-number"},[_vm._v("24")]),_c('br'),_c('span',{staticClass:"line-number"},[_vm._v("25")]),_c('br'),_c('span',{staticClass:"line-number"},[_vm._v("26")]),_c('br'),_c('span',{staticClass:"line-number"},[_vm._v("27")]),_c('br'),_c('span',{staticClass:"line-number"},[_vm._v("28")]),_c('br'),_c('span',{staticClass:"line-number"},[_vm._v("29")]),_c('br'),_c('span',{staticClass:"line-number"},[_vm._v("30")]),_c('br'),_c('span',{staticClass:"line-number"},[_vm._v("31")]),_c('br'),_c('span',{staticClass:"line-number"},[_vm._v("32")]),_c('br'),_c('span',{staticClass:"line-number"},[_vm._v("33")]),_c('br'),_c('span',{staticClass:"line-number"},[_vm._v("34")]),_c('br'),_c('span',{staticClass:"line-number"},[_vm._v("35")]),_c('br'),_c('span',{staticClass:"line-number"},[_vm._v("36")]),_c('br'),_c('span',{staticClass:"line-number"},[_vm._v("37")]),_c('br'),_c('span',{staticClass:"line-number"},[_vm._v("38")]),_c('br'),_c('span',{staticClass:"line-number"},[_vm._v("39")]),_c('br'),_c('span',{staticClass:"line-number"},[_vm._v("40")]),_c('br'),_c('span',{staticClass:"line-number"},[_vm._v("41")]),_c('br'),_c('span',{staticClass:"line-number"},[_vm._v("42")]),_c('br'),_c('span',{staticClass:"line-number"},[_vm._v("43")]),_c('br'),_c('span',{staticClass:"line-number"},[_vm._v("44")]),_c('br'),_c('span',{staticClass:"line-number"},[_vm._v("45")]),_c('br'),_c('span',{staticClass:"line-number"},[_vm._v("46")]),_c('br'),_c('span',{staticClass:"line-number"},[_vm._v("47")]),_c('br'),_c('span',{staticClass:"line-number"},[_vm._v("48")]),_c('br')])]),_c('img',{attrs:{"src":_vm.$withBase('/files/37createaks.png')}}),_vm._v(" "),_c('p',[_vm._v("(AKS cluster successfully created in Azure Cloud Shell)")]),_vm._v(" "),_c('ol',{attrs:{"start":"3"}},[_c('li',[_vm._v("When the AKS cluster is created, run the following command to configure "),_c('strong',[_vm._v("kubectl")]),_vm._v(" to connect to your Kubernetes cluster:")])]),_vm._v(" "),_c('div',{staticClass:"language- line-numbers-mode"},[_c('pre',{pre:true,attrs:{"class":"language-text"}},[_c('code',[_vm._v("az aks get-credentials --resource-group $RESOURCE_GROUP_NAME --name $CLUSTER_NAME\n")])]),_vm._v(" "),_c('div',{staticClass:"line-numbers-wrapper"},[_c('span',{staticClass:"line-number"},[_vm._v("1")]),_c('br')])]),_c('ol',{attrs:{"start":"4"}},[_c('li',[_vm._v("Before we can run example pods to apply network policies to, we need to "),_c('strong',[_vm._v("create a namespace")]),_vm._v(". Run the following code to create a namespace called "),_c('strong',[_vm._v("test")]),_vm._v(":")])]),_vm._v(" "),_c('div',{staticClass:"language- line-numbers-mode"},[_c('pre',{pre:true,attrs:{"class":"language-text"}},[_c('code',[_vm._v("kubectl create namespace test\nkubectl label namespace/test purpose=test\n")])]),_vm._v(" "),_c('div',{staticClass:"line-numbers-wrapper"},[_c('span',{staticClass:"line-number"},[_vm._v("1")]),_c('br'),_c('span',{staticClass:"line-number"},[_vm._v("2")]),_c('br')])]),_c('ol',{attrs:{"start":"5"}},[_c('li',[_vm._v("Now create an example back-end pod that runs "),_c('a',{attrs:{"href":"https://www.nginx.com/","target":"_blank","rel":"noopener noreferrer"}},[_vm._v("NGINX"),_c('OutboundLink')],1),_vm._v(". We'll use this back-end pod to simulate a sample back-end web application. The following code creates the pod in the "),_c('strong',[_vm._v("test")]),_vm._v(" namespace, and opens port 80 to serve web traffic. It also labels the pod with "),_c('strong',[_vm._v("app=webapp,role=backend")]),_vm._v(" so that we can target it with a network policy in the next section:")])]),_vm._v(" "),_c('div',{staticClass:"language- line-numbers-mode"},[_c('pre',{pre:true,attrs:{"class":"language-text"}},[_c('code',[_vm._v("kubectl run backend --image=nginx --labels app=webapp,role=backend --namespace test --expose --port 80 --generator=run-pod/v1\n")])]),_vm._v(" "),_c('div',{staticClass:"line-numbers-wrapper"},[_c('span',{staticClass:"line-number"},[_vm._v("1")]),_c('br')])]),_c('ol',{attrs:{"start":"6"}},[_c('li',[_vm._v("Next, create another pod and attach a terminal session to it, to test that we can reach the NGINX webpage:")])]),_vm._v(" "),_c('div',{staticClass:"language- line-numbers-mode"},[_c('pre',{pre:true,attrs:{"class":"language-text"}},[_c('code',[_vm._v("kubectl run --rm -it --image=alpine network-policy --namespace test --generator=run-pod/v1\n")])]),_vm._v(" "),_c('div',{staticClass:"line-numbers-wrapper"},[_c('span',{staticClass:"line-number"},[_vm._v("1")]),_c('br')])]),_c('ol',{attrs:{"start":"7"}},[_c('li',[_vm._v("At the command prompt, run the following command to try and get the webpage from the other pod. The output should be the HTML of the NGINX pod.")])]),_vm._v(" "),_c('div',{staticClass:"language- line-numbers-mode"},[_c('pre',{pre:true,attrs:{"class":"language-text"}},[_c('code',[_vm._v("wget -qO- http://backend\n")])]),_vm._v(" "),_c('div',{staticClass:"line-numbers-wrapper"},[_c('span',{staticClass:"line-number"},[_vm._v("1")]),_c('br')])]),_c('ol',{attrs:{"start":"8"}},[_c('li',[_vm._v("Run the "),_c('strong',[_vm._v("exit")]),_vm._v(" command to stop the terminal session")])]),_vm._v(" "),_c('h4',{attrs:{"id":"deny-all-traffic"}},[_c('a',{staticClass:"header-anchor",attrs:{"href":"#deny-all-traffic"}},[_vm._v("#")]),_vm._v(" Deny all traffic")]),_vm._v(" "),_c('ol',[_c('li',[_vm._v("Remember that by default, all traffic is allowed. So, before we can allow specific network traffic between the pods, we have to create a network policy that denies all traffic. To do this, we start by creating a file that contains YAML code that defines the network policy. Create a new file on your computer called "),_c('strong',[_vm._v("backend-policy.yaml")]),_vm._v(" and paste the following code into the file. This denies all inbound (ingress) traffic to the pod, because there are no rules defined for "),_c('strong',[_vm._v("ingress")]),_vm._v(".")])]),_vm._v(" "),_c('div',{staticClass:"language- line-numbers-mode"},[_c('pre',{pre:true,attrs:{"class":"language-text"}},[_c('code',[_vm._v("kind: NetworkPolicy\napiVersion: networking.k8s.io/v1\nmetadata:\n  name: backend-policy\n  namespace: test\nspec:\n  podSelector:\n    matchLabels:\n      app: webapp\n      role: backend\n  ingress: []\n")])]),_vm._v(" "),_c('div',{staticClass:"line-numbers-wrapper"},[_c('span',{staticClass:"line-number"},[_vm._v("1")]),_c('br'),_c('span',{staticClass:"line-number"},[_vm._v("2")]),_c('br'),_c('span',{staticClass:"line-number"},[_vm._v("3")]),_c('br'),_c('span',{staticClass:"line-number"},[_vm._v("4")]),_c('br'),_c('span',{staticClass:"line-number"},[_vm._v("5")]),_c('br'),_c('span',{staticClass:"line-number"},[_vm._v("6")]),_c('br'),_c('span',{staticClass:"line-number"},[_vm._v("7")]),_c('br'),_c('span',{staticClass:"line-number"},[_vm._v("8")]),_c('br'),_c('span',{staticClass:"line-number"},[_vm._v("9")]),_c('br'),_c('span',{staticClass:"line-number"},[_vm._v("10")]),_c('br'),_c('span',{staticClass:"line-number"},[_vm._v("11")]),_c('br')])]),_c('ol',{attrs:{"start":"2"}},[_c('li',[_vm._v("In the Azure Cloud Shell, upload the network policy document by clicking the "),_c('strong',[_vm._v("Upload/Download files button")]),_vm._v(" and selecting the document")])]),_vm._v(" "),_c('img',{attrs:{"src":_vm.$withBase('/files/37uploadfiles.png')}}),_vm._v(" "),_c('p',[_vm._v("(Upload files in the Azure Cloud Shell)")]),_vm._v(" "),_c('ol',{attrs:{"start":"3"}},[_c('li',[_vm._v("Now apply the network policy by running this command:")])]),_vm._v(" "),_c('div',{staticClass:"language- line-numbers-mode"},[_c('pre',{pre:true,attrs:{"class":"language-text"}},[_c('code',[_vm._v("kubectl apply -f backend-policy.yaml\n")])]),_vm._v(" "),_c('div',{staticClass:"line-numbers-wrapper"},[_c('span',{staticClass:"line-number"},[_vm._v("1")]),_c('br')])]),_c('h4',{attrs:{"id":"test-that-all-traffic-is-denied"}},[_c('a',{staticClass:"header-anchor",attrs:{"href":"#test-that-all-traffic-is-denied"}},[_vm._v("#")]),_vm._v(" Test that all traffic is denied")]),_vm._v(" "),_c('ol',[_c('li',[_vm._v("Let's test the network policy. Run the following code to create another pod and attach a terminal to it:")])]),_vm._v(" "),_c('div',{staticClass:"language- line-numbers-mode"},[_c('pre',{pre:true,attrs:{"class":"language-text"}},[_c('code',[_vm._v("kubectl run --rm -it --image=alpine network-policy --namespace test --generator=run-pod/v1\n")])]),_vm._v(" "),_c('div',{staticClass:"line-numbers-wrapper"},[_c('span',{staticClass:"line-number"},[_vm._v("1")]),_c('br')])]),_c('ol',{attrs:{"start":"2"}},[_c('li',[_vm._v("Now run "),_c('strong',[_vm._v("wget")]),_vm._v(" again to try and get the NGINX webpage. This command should result in "),_c('strong',[_vm._v("wget: download timed out")])])]),_vm._v(" "),_c('div',{staticClass:"language- line-numbers-mode"},[_c('pre',{pre:true,attrs:{"class":"language-text"}},[_c('code',[_vm._v("wget -qO- --timeout=2 http://backend\n")])]),_vm._v(" "),_c('div',{staticClass:"line-numbers-wrapper"},[_c('span',{staticClass:"line-number"},[_vm._v("1")]),_c('br')])]),_c('ol',{attrs:{"start":"3"}},[_c('li',[_vm._v("Exit out of the terminal by running the "),_c('strong',[_vm._v("exit")]),_vm._v(" command")])]),_vm._v(" "),_c('h4',{attrs:{"id":"allow-specific-traffic"}},[_c('a',{staticClass:"header-anchor",attrs:{"href":"#allow-specific-traffic"}},[_vm._v("#")]),_vm._v(" Allow specific traffic")]),_vm._v(" "),_c('p',[_vm._v("Now that all traffic is denied, we can start allowing specific traffic.")]),_vm._v(" "),_c('ol',[_c('li',[_vm._v("Edit the "),_c('strong',[_vm._v("backend-policy.yaml")]),_vm._v(" and paste the following, new code in. This only allows ingress traffic to pods that match the labels "),_c('strong',[_vm._v("app:webapp and role: frontend")])])]),_vm._v(" "),_c('div',{staticClass:"language- line-numbers-mode"},[_c('pre',{pre:true,attrs:{"class":"language-text"}},[_c('code',[_vm._v("kind: NetworkPolicy\napiVersion: networking.k8s.io/v1\nmetadata:\n  name: backend-policy\n  namespace: test\nspec:\n  podSelector:\n    matchLabels:\n      app: webapp\n      role: backend\n  ingress:\n  - from:\n    - namespaceSelector: {}\n      podSelector:\n        matchLabels:\n          app: webapp\n          role: frontend\n")])]),_vm._v(" "),_c('div',{staticClass:"line-numbers-wrapper"},[_c('span',{staticClass:"line-number"},[_vm._v("1")]),_c('br'),_c('span',{staticClass:"line-number"},[_vm._v("2")]),_c('br'),_c('span',{staticClass:"line-number"},[_vm._v("3")]),_c('br'),_c('span',{staticClass:"line-number"},[_vm._v("4")]),_c('br'),_c('span',{staticClass:"line-number"},[_vm._v("5")]),_c('br'),_c('span',{staticClass:"line-number"},[_vm._v("6")]),_c('br'),_c('span',{staticClass:"line-number"},[_vm._v("7")]),_c('br'),_c('span',{staticClass:"line-number"},[_vm._v("8")]),_c('br'),_c('span',{staticClass:"line-number"},[_vm._v("9")]),_c('br'),_c('span',{staticClass:"line-number"},[_vm._v("10")]),_c('br'),_c('span',{staticClass:"line-number"},[_vm._v("11")]),_c('br'),_c('span',{staticClass:"line-number"},[_vm._v("12")]),_c('br'),_c('span',{staticClass:"line-number"},[_vm._v("13")]),_c('br'),_c('span',{staticClass:"line-number"},[_vm._v("14")]),_c('br'),_c('span',{staticClass:"line-number"},[_vm._v("15")]),_c('br'),_c('span',{staticClass:"line-number"},[_vm._v("16")]),_c('br'),_c('span',{staticClass:"line-number"},[_vm._v("17")]),_c('br')])]),_c('ol',{attrs:{"start":"2"}},[_c('li',[_vm._v("Upload the new version of the file to the Azure Cloud Shell")]),_vm._v(" "),_c('li',[_vm._v("Apply the new policy by running the following code:")])]),_vm._v(" "),_c('div',{staticClass:"language- line-numbers-mode"},[_c('pre',{pre:true,attrs:{"class":"language-text"}},[_c('code',[_vm._v("kubectl apply -f backend-policy.yaml\n")])]),_vm._v(" "),_c('div',{staticClass:"line-numbers-wrapper"},[_c('span',{staticClass:"line-number"},[_vm._v("1")]),_c('br')])]),_c('ol',{attrs:{"start":"4"}},[_c('li',[_vm._v("Now run a pod that has the labels "),_c('strong',[_vm._v("app=webapp,role=frontend")]),_vm._v(" and attach a terminal session with the following code:")])]),_vm._v(" "),_c('div',{staticClass:"language- line-numbers-mode"},[_c('pre',{pre:true,attrs:{"class":"language-text"}},[_c('code',[_vm._v("kubectl run --rm -it frontend --image=alpine --labels app=webapp,role=frontend --namespace test --generator=run-pod/v1\n")])]),_vm._v(" "),_c('div',{staticClass:"line-numbers-wrapper"},[_c('span',{staticClass:"line-number"},[_vm._v("1")]),_c('br')])]),_c('ol',{attrs:{"start":"5"}},[_c('li',[_vm._v("Test if we can get the HTML of the NGINX webpage with the "),_c('strong',[_vm._v("wget")]),_vm._v(" command. This should work as the pod that we are using has the labels that are allowed by the network policy:")])]),_vm._v(" "),_c('div',{staticClass:"language- line-numbers-mode"},[_c('pre',{pre:true,attrs:{"class":"language-text"}},[_c('code',[_vm._v("wget -qO- http://backend\n")])]),_vm._v(" "),_c('div',{staticClass:"line-numbers-wrapper"},[_c('span',{staticClass:"line-number"},[_vm._v("1")]),_c('br')])]),_c('ol',{attrs:{"start":"6"}},[_c('li',[_vm._v("It works! Now exit the terminal by running the "),_c('strong',[_vm._v("exit")]),_vm._v(" command")])]),_vm._v(" "),_c('img',{attrs:{"src":_vm.$withBase('/files/37getnginxpage.png')}}),_vm._v(" "),_c('p',[_vm._v("(Successful get of the NGINX webpage in the Azure Cloud Shell)")]),_vm._v(" "),_c('ol',{attrs:{"start":"7"}},[_c('li',[_vm._v("Let's see if the network policy actually works. Let's create a pod that doesn't have the allowed labels and get the webpage from there:")])]),_vm._v(" "),_c('div',{staticClass:"language- line-numbers-mode"},[_c('pre',{pre:true,attrs:{"class":"language-text"}},[_c('code',[_vm._v("kubectl run --rm -it --image=alpine network-policy --namespace test --generator=run-pod/v1\n\nwget -qO- --timeout=2 http://backend\n")])]),_vm._v(" "),_c('div',{staticClass:"line-numbers-wrapper"},[_c('span',{staticClass:"line-number"},[_vm._v("1")]),_c('br'),_c('span',{staticClass:"line-number"},[_vm._v("2")]),_c('br'),_c('span',{staticClass:"line-number"},[_vm._v("3")]),_c('br')])]),_c('p',[_vm._v("This doesn't work and times out. This means that the network policy is working.")]),_vm._v(" "),_c('img',{attrs:{"src":_vm.$withBase('/files/37downloadfailed.png')}}),_vm._v(" "),_c('p',[_vm._v("(Failed get of the NGINX webpage in the Azure Cloud Shell)")]),_vm._v(" "),_c('ol',{attrs:{"start":"8"}},[_c('li',[_vm._v("Exit the terminal with the "),_c('strong',[_vm._v("exit")]),_vm._v(" command")])]),_vm._v(" "),_c('h4',{attrs:{"id":"conclusion"}},[_c('a',{staticClass:"header-anchor",attrs:{"href":"#conclusion"}},[_vm._v("#")]),_vm._v(" Conclusion")]),_vm._v(" "),_c('p',[_vm._v("Securing traffic between components in your Kubernetes cluster is very important, especially when you are running a cluster in production. With the "),_c('a',{attrs:{"href":"https://docs.microsoft.com/azure/aks/use-network-policies?WT.mc_id=docs-azuredevtips-azureappsdev","target":"_blank","rel":"noopener noreferrer"}},[_vm._v("Azure"),_c('OutboundLink')],1),_vm._v(" and "),_c('a',{attrs:{"href":"https://docs.projectcalico.org/v3.8/security/calico-network-policy","target":"_blank","rel":"noopener noreferrer"}},[_vm._v("Calico"),_c('OutboundLink')],1),_vm._v(" network policies that AKS can use out-of-the-box, you can apply advanced security rules to control your traffic. Go and check it out!")]),_vm._v(" "),_c('h4',{attrs:{"id":"stay-connected-with-me-on-various-social-platforms-for-daily-software-development-news"}},[_c('a',{staticClass:"header-anchor",attrs:{"href":"#stay-connected-with-me-on-various-social-platforms-for-daily-software-development-news"}},[_vm._v("#")]),_vm._v(" Stay connected with me on various social platforms for daily software development news.")]),_vm._v(" "),_c('ul',[_c('li',[_c('a',{attrs:{"href":"https://twitter.com/intent/follow?screen_name=mbcrump","target":"_blank","rel":"noopener noreferrer"}},[_vm._v("Twitter"),_c('OutboundLink')],1)]),_vm._v(" "),_c('li',[_c('a',{attrs:{"href":"https://twitch.tv/mbcrump","target":"_blank","rel":"noopener noreferrer"}},[_vm._v("Twitch"),_c('OutboundLink')],1)]),_vm._v(" "),_c('li',[_c('a',{attrs:{"href":"https://instagram.com/mbcrump","target":"_blank","rel":"noopener noreferrer"}},[_vm._v("Instagram"),_c('OutboundLink')],1)]),_vm._v(" "),_c('li',[_c('a',{attrs:{"href":"https://youtube.com/mbcrump","target":"_blank","rel":"noopener noreferrer"}},[_vm._v("YouTube"),_c('OutboundLink')],1)]),_vm._v(" "),_c('li',[_c('a',{attrs:{"href":"https://github.com/mbcrump","target":"_blank","rel":"noopener noreferrer"}},[_vm._v("GitHub"),_c('OutboundLink')],1)]),_vm._v(" "),_c('li',[_c('a',{attrs:{"href":"https://www.michaelcrump.net","target":"_blank","rel":"noopener noreferrer"}},[_vm._v("Website"),_c('OutboundLink')],1)])])])}
var staticRenderFns = []



/***/ })

}]);
//# sourceMappingURL=157.04a87d73.js.map