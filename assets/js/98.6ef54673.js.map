{"version":3,"sources":["webpack:///./blog/tip185.md","webpack:///./blog/tip185.md?ad22","webpack:///./blog/tip185.md?acc3"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAoF;AACpF;;;AAGA;AACuF;AACvF,gBAAgB,2GAAU;AAC1B;AACA,EAAE,gFAAM;AACR,EAAE,yFAAe;AACjB;AACA;AACA;AACA;;AAEA;;AAEe,gF;;;;;;;;;;;;ACjBf;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA,0BAA0B,aAAa,0BAA0B,wBAAwB,qCAAqC,OAAO,gCAAgC,YAAY,+BAA+B,UAAU,iCAAiC,yEAAyE,OAAO,wJAAwJ,wFAAwF,OAAO,yCAAyC,UAAU,mCAAmC,4CAA4C,8GAA8G,OAAO,gJAAgJ,mVAAmV,OAAO,yJAAyJ,y2BAAy2B,OAAO,0BAA0B,UAAU,mCAAmC,6BAA6B,sIAAsI,OAAO,mGAAmG,wNAAwN,OAAO,kDAAkD,uTAAuT,OAAO,4BAA4B,UAAU,mCAAmC,+BAA+B,qJAAqJ,OAAO,+JAA+J,2HAA2H,OAAO,0LAA0L,ojBAAojB,gDAAgD,YAAY,gBAAgB,2BAA2B,wBAAwB,gBAAgB,4BAA4B,wCAAwC,gBAAgB,6BAA6B,8CAA8C,gBAAgB,6BAA6B,kDAAkD,gBAAgB,0BAA0B,uCAAuC,gBAAgB,yBAAyB,iDAAiD,gBAAgB,6BAA6B,2BAA2B,gBAAgB,0BAA0B,6CAA6C,gBAAgB,6BAA6B,oDAAoD,gBAAgB,6BAA6B,2BAA2B,gBAAgB,0BAA0B,qDAAqD,gBAAgB,6BAA6B,kDAAkD,gBAAgB,6BAA6B,yDAAyD,gBAAgB,6BAA6B,2BAA2B,gBAAgB,6BAA6B,uDAAuD,gBAAgB,6BAA6B,uCAAuC,gBAAgB,yBAAyB,yCAAyC,gBAAgB,mDAAmD,wCAAwC,gBAAgB,6BAA6B,2BAA2B,gBAAgB,6BAA6B,uCAAuC,gBAAgB,6BAA6B,WAAW,4BAA4B,gBAAgB,6BAA6B,WAAW,gBAAgB,gBAAgB,6BAA6B,2BAA2B,gBAAgB,6BAA6B,WAAW,iDAAiD,gBAAgB,6BAA6B,4CAA4C,gBAAgB,6BAA6B,uCAAuC,gBAAgB,0BAA0B,gDAAgD,gBAAgB,6BAA6B,mDAAmD,gBAAgB,6BAA6B,WAAW,4CAA4C,mCAAmC,aAAa,0BAA0B,oCAAoC,0BAA0B,oCAAoC,0BAA0B,oCAAoC,0BAA0B,kUAAkU,OAAO,gDAAgD,2EAA2E,OAAO,0JAA0J,qEAAqE,OAAO,8JAA8J,+EAA+E,OAAO,6JAA6J,2UAA2U,OAAO,0JAA0J,4XAA4X,OAAO,8BAA8B,UAAU,mCAAmC,iCAAiC,y1BAAy1B,OAAO,8CAA8C,qOAAqO,OAAO,4JAA4J,yFAAyF,OAAO,uKAAuK,mFAAmF,OAAO,gKAAgK,kGAAkG,OAAO,kKAAkK;AAC1zW","file":"assets/js/98.6ef54673.js","sourcesContent":["import { render, staticRenderFns } from \"./tip185.md?vue&type=template&id=00d78eb3&\"\nvar script = {}\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../node_modules/cache-loader/dist/cjs.js?{\\\"cacheDirectory\\\":\\\"node_modules/@vuepress/core/node_modules/.cache/vuepress\\\",\\\"cacheIdentifier\\\":\\\"671ceca3-vue-loader-template\\\"}!../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../node_modules/cache-loader/dist/cjs.js??ref--1-0!../node_modules/vue-loader/lib/index.js??ref--1-1!../node_modules/@vuepress/markdown-loader/index.js??ref--1-2!./tip185.md?vue&type=template&id=00d78eb3&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ContentSlotsDistributor',{attrs:{\"slot-key\":_vm.$parent.slotKey}},[_c('div',{staticClass:\"custom-block tip\"},[_c('p',{staticClass:\"custom-block-title\"},[_vm._v(\"TIP\")]),_vm._v(\" \"),_c('p',[_vm._v(\"ðŸ’¡ Learn more : \"),_c('a',{attrs:{\"href\":\"https://docs.microsoft.com/azure/cosmos-db/introduction?WT.mc_id=docs-azuredevtips-azureappsdev\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\"}},[_vm._v(\"Azure Cosmos DB\"),_c('OutboundLink')],1),_vm._v(\".\")])]),_vm._v(\" \"),_c('h3',{attrs:{\"id\":\"performance-testing-on-cosmos-db\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#performance-testing-on-cosmos-db\"}},[_vm._v(\"#\")]),_vm._v(\" Performance Testing on Cosmos DB\")]),_vm._v(\" \"),_c('p',[_vm._v(\"Although \"),_c('a',{attrs:{\"href\":\"https://azure.microsoft.com/services/cosmos-db?WT.mc_id=azure-azuredevtips-azureappsdev\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\"}},[_vm._v(\"Cosmos DB\"),_c('OutboundLink')],1),_vm._v(\" comes with global availability and guaranteed performance, it's still incumbent on the developer and architect to understand the implication of application and database design choices on performance. Central to the discussion of performance in Cosmos DB is the concept of a \"),_c('a',{attrs:{\"href\":\"https://docs.microsoft.com/azure/cosmos-db/request-units?WT.mc_id=docs-azuredevtips-azureappsdev\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\"}},[_vm._v(\"request unit (RU)\"),_c('OutboundLink')],1),_vm._v(\", which is canonically defined as the processing capacity (CPU, memory, and IOPS) to perform a GET (retrieve) on a 1-KB document with 10 properties. Requests to delete, insert, or update require more capacity and so result in a higher RU cost. For instance, an insert of that same 1-KB document would incur a cost of 5 RUs.\")]),_vm._v(\" \"),_c('p',[_vm._v(\"RUs are also the currency of scale in Cosmos DB and, given that the RU cost of a single operation is deterministic, it is possible to estimate the cost of anticipated operations as well as to monitor the actual cost of completed operations. Armed with this information, you will be able to better assess the performance and scalability of your data architecture from planning to implementation to monitoring the production system.\")]),_vm._v(\" \"),_c('h5',{attrs:{\"id\":\"capacity-planning\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#capacity-planning\"}},[_vm._v(\"#\")]),_vm._v(\" Capacity Planning\")]),_vm._v(\" \"),_c('p',[_vm._v(\"In the planning stages, you can make use of the \"),_c('a',{attrs:{\"href\":\"https://www.documentdb.com/capacityplanner\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\"}},[_vm._v(\"capacity planner\"),_c('OutboundLink')],1),_vm._v(\" to provide a rough estimate of required RUs given your sample document profile and the expected number of operations per second.\")]),_vm._v(\" \"),_c('img',{attrs:{\"src\":_vm.$withBase('/files/cosmos-planner.png')}}),_vm._v(\" \"),_c('p',[_vm._v(\"Here we can see that a query-heavy app storing 50,000 documents (of which \"),_c('strong',[_vm._v(\"sample.json\")]),_vm._v(\" was a representation) and expecting 20 new documents and 4 updates per second needs a database provisioned with just over 1,300 RUs.\")]),_vm._v(\" \"),_c('h5',{attrs:{\"id\":\"development-insight\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#development-insight\"}},[_vm._v(\"#\")]),_vm._v(\" Development Insight\")]),_vm._v(\" \"),_c('p',[_vm._v(\"While developing your data access strategies, take a look at \"),_c('a',{attrs:{\"href\":\"https://docs.microsoft.com/azure/cosmos-db/performance-testing?WT.mc_id=docs-azuredevtips-azureappsdev\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\"}},[_vm._v(\"Performance and scale testing with Azure Cosmos DB\"),_c('OutboundLink')],1),_vm._v(\". It describes an \"),_c('a',{attrs:{\"href\":\"https://github.com/Azure/azure-cosmosdb-dotnet/tree/master/samples/documentdb-benchmark?WT.mc_id=github-azuredevtips-azureappsdev\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\"}},[_vm._v(\"open-source benchmarking project\"),_c('OutboundLink')],1),_vm._v(\" that you can adapt to your own domain to get a more precise accounting of RUs and thus the expected performance of your application. The code uses the .NET SDK and specifically applies to inserts into a document database (versus tables or graphs), but the concepts in the code can be adapted to your specific data model and query profiles. A key part of the processing is accumulating the \"),_c('strong',[_vm._v(\"RequestCharge\")]),_vm._v(\" from each operation:\")]),_vm._v(\" \"),_c('div',{staticClass:\"language-csharp line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-csharp\"}},[_c('code',[_c('span',{pre:true,attrs:{\"class\":\"token class-name\"}},[_vm._v(\"ResourceResponse\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"<\")]),_vm._v(\"Document\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\">\")])]),_vm._v(\" response \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"await\")]),_vm._v(\" client\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"CreateDocumentAsync\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"\\n\\tUriFactory\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"CreateDocumentCollectionUri\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"DatabaseName\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\" DataCollectionName\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\"\\n\\tnewDictionary\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"new\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token constructor-invocation class-name\"}},[_vm._v(\"RequestOptions\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\nrequestUnitsConsumed\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"[\")]),_vm._v(\"taskId\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"]\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"+=\")]),_vm._v(\" response\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"RequestCharge\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"3\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"4\")]),_c('br')])]),_c('p',[_vm._v(\"For the execution captured below, the exact cost of inserting 10,000 test documents is slightly less 4,000 RU/s or 4 percent of the provisioned throughput for this collection (as noted in the collection summary line at the top of the console output).\")]),_vm._v(\" \"),_c('img',{attrs:{\"src\":_vm.$withBase('/files/benchmarkapp.png')}}),_vm._v(\" \"),_c('p',[_vm._v(\"It's important to note, too, that \"),_c('a',{attrs:{\"href\":\"https://docs.microsoft.com/azure/cosmos-db/partition-data?WT.mc_id=docs-azuredevtips-azureappsdev\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\"}},[_vm._v(\"partitioning\"),_c('OutboundLink')],1),_vm._v(\", \"),_c('a',{attrs:{\"href\":\"https://docs.microsoft.com/azure/cosmos-db/consistency-levels?WT.mc_id=docs-azuredevtips-azureappsdev\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\"}},[_vm._v(\"consistency levels\"),_c('OutboundLink')],1),_vm._v(\", and \"),_c('a',{attrs:{\"href\":\"https://docs.microsoft.com/azure/cosmos-db/indexing-policies?WT.mc_id=docs-azuredevtips-azureappsdev\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\"}},[_vm._v(\"indexing\"),_c('OutboundLink')],1),_vm._v(\" will also have an impact on performance, so you may want to establish a baseline benchmark application and judiciously modify various configuration options and settings to determine their effect on performance.\")]),_vm._v(\" \"),_c('p',[_vm._v(\"Also consider using the \"),_c('a',{attrs:{\"href\":\"https://docs.microsoft.com/azure/cosmos-db/local-emulator?WT.mc_id=docs-azuredevtips-azureappsdev\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\"}},[_vm._v(\"Azure Cosmos DB Emulator\"),_c('OutboundLink')],1),_vm._v(\" as the target of the performance testing application. It only supports document style databases and doesn't simulate different consistency levels, but it will provide insight into RU costs without incurring actual charges for running your performance tests against your Azure instance.\")]),_vm._v(\" \"),_c('h5',{attrs:{\"id\":\"production-monitoring\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#production-monitoring\"}},[_vm._v(\"#\")]),_vm._v(\" Production Monitoring\")]),_vm._v(\" \"),_c('p',[_vm._v(\"For an operational database, the Azure portal Monitoring -> Metrics blade provides in-depth statistics on throughput, storage, availability, and latency. The Storage tab is of particular interest in that it lends insight into the partitioning of the data. Be sure to drill down into a specific database and collection to see the partition-specific metrics.\")]),_vm._v(\" \"),_c('p',[_vm._v(\"In the snapshot captured here, partitions are relatively evenly distributed, which indicates a good choice for a partition key. Had one partition been exceedingly large (or 'hot'), it could well be a performance bottleneck, and the accompanying list of the predominant keys in that partition could provide some suggestions for tweaking the partitioning strategy.\")]),_vm._v(\" \"),_c('img',{attrs:{\"src\":_vm.$withBase('/files/partitions.png')}}),_vm._v(\" \"),_c('p',[_vm._v(\"As you use the insight from these metrics to resolve potential bottlenecks, take a look at the performance tips offered by Microsoft in the following links:\")]),_vm._v(\" \"),_c('ul',[_c('li',[_c('a',{attrs:{\"href\":\"https://docs.microsoft.com/azure/cosmos-db/performance-tips?WT.mc_id=docs-azuredevtips-azureappsdev\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\"}},[_vm._v(\"Performance tips for .NET SDK\"),_c('OutboundLink')],1),_vm._v(\" (or \"),_c('a',{attrs:{\"href\":\"https://docs.microsoft.com/azure/cosmos-db/performance-tips-async-java?WT.mc_id=docs-azuredevtips-azureappsdev\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\"}},[_vm._v(\"Java\"),_c('OutboundLink')],1),_vm._v(\")\")]),_vm._v(\" \"),_c('li',[_c('a',{attrs:{\"href\":\"https://docs.microsoft.com/azure/cosmos-db/key-value-store-cost?WT.mc_id=docs-azuredevtips-azureappsdev\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\"}},[_vm._v(\"Cost-effective reads and writes\"),_c('OutboundLink')],1)]),_vm._v(\" \"),_c('li',[_c('a',{attrs:{\"href\":\"https://docs.microsoft.com/azure/cosmos-db/sql-api-partition-data?WT.mc_id=docs-azuredevtips-azureappsdev\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\"}},[_vm._v(\"SQL data partitioning\"),_c('OutboundLink')],1)])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }"],"sourceRoot":""}